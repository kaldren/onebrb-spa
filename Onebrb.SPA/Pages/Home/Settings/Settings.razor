@page "/settings"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Onebrb.SPA.Models
@using System.Security.Claims

@attribute [Authorize]

@inject IConfiguration Configuration
@inject IHttpClientFactory ClientFactory

<style>
    form .row {
        margin-bottom: 16px;
    }
</style>

@if (profile == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="settings-component">
        <RadzenTemplateForm Data="@profile" Submit="@((ProfileModel args) => { Submit(args); })">
            <div class="row">
                <div class="settings-component__form col-md-6">
                    <div class="row">
                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenTextBox style="width: 100%;" Name="First Name" @bind-Value="profile.FirstName" />
                        </div>
                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenTextBox style="width: 100%;" Name="Last Name" @bind-Value="profile.LastName" />
                        </div>
                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenTextBox style="width: 100%;" Name="Email" @bind-Value="profile.Email" />
                        </div>
                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenTextBox style="width: 100%;" Name="Phone" @bind-Value="profile.Phone" />
                        </div>
@*                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenDropDown @bind-Value="order.Country" Data="@professions" style="width: 100%;" TextProperty="Name" ValueProperty="Id" Name="Profession">
                            </RadzenDropDown>
                        </div>
                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenDropDown @bind-Value="order.Country" Placeholder="USA" Data="@countries" style="width: 100%;" TextProperty="Name" ValueProperty="Id" Name="Country">
                            </RadzenDropDown>
                        </div>*@
                        <div class="settings-component__form__input-div col-md-8">
                            <RadzenCard>
                                <h4 class="mb-4">About</h4>
                                <RadzenTextArea Class="w-100" @bind-Value="profile.About" />
                            </RadzenCard>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-12 d-flex" style="margin-top: 16px;">
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                    <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel" Click="@Cancel" />
                </div>
            </div>
        </RadzenTemplateForm>
    </div>
}

@code {
    private ProfileModel? profile;

    public class Profession
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    void Submit(ProfileModel arg)
    {
        //
    }

    void Cancel()
    {
        //
    }

    private HttpResponseMessage? res;
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;
        var userObject = user.FindFirst("sub");

        var client = ClientFactory.CreateClient("OnebrbAPI");

        res = await client.GetAsync($"{Configuration["AppConfiguration:OnebrbAPIEndpoint"]}profiles/1");

        if (res.IsSuccessStatusCode)
        {
            profile = await client.GetFromJsonAsync<ProfileModel>($"{Configuration["AppConfiguration:OnebrbAPIEndpoint"]}profiles/1");
        }
    }
}