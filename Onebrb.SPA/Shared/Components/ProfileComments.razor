@using AutoMapper
@using Onebrb.SPA.Models
@using OnebrbApi

@inject IHttpClientFactory ClientFactory
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@inject IOnebrbApiClient OnebrbApiClient
@inject IMapper Mapper

@if (@comments is null)
{
    <p>No comments.</p>
}
else
{
    <RadzenTabs TabPosition="TabPosition.Top" RenderMode="TabRenderMode.Client" class="profile-comments">
        <Tabs>
            <RadzenTabsItem Text="Comments">
                @if (comments.Count() == 0)
                {
                    <p>No comments</p>
                }
                else
                {
                    <RadzenDataList PageSize="4" WrapItems="true" AllowPaging="true" Data="@comments" TItem="CommentModel">
                        <Template Context="comment">
                            <RadzenCard>
                                <div class="row">
                                    <div class="col-md-8 text-truncate">
                                        <b class="profile-comments__profile-commented-link" @onclick="OnProfileClick">@(comment.AuthorFirstName)</b>
                                    </div>
                                    <div class="col-md-4 text-right">
                                        <RadzenBadge BadgeStyle="BadgeStyle.Secondary">
                                            <StarComponent Value="@comment.StarRating" />
                                        </RadzenBadge>
                                    </div>
                                </div>
                                <hr style="border: none; background-color: rgba(0,0,0,.08); height: 1px; margin: 1rem 0;" />
                                <div class="d-flex flex-row align-items-center">
                                    <RadzenImage Path="@comment.PhotoUrl" Class="rounded-circle float-left mr-3" Style="width: 80px; height: 80px;" />
                                    <div>
                                        <div style="font-size: .8em">@comment.Content</div>
                                    </div>
                                </div>
                            </RadzenCard>
                        </Template>
                    </RadzenDataList>
                }
            </RadzenTabsItem>
            <RadzenTabsItem Text="Certificates">
                @*                <RadzenDataGrid ColumnWidth="150px" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true" Data="@employees" TItem="Employee">
            <Columns>
            <RadzenDataGridColumn TItem="Employee" Property="Photo" Title="Photo" Sortable="false" Filterable="false" Width="60px">
            <Template Context="data">
            <RadzenImage Path="@data?.Photo" Style="width: 40px; height: 40px; border-radius: 8px;" />
            </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Employee" Property="LastName" Title="Last Name" />
            <RadzenDataGridColumn TItem="Employee" Property="FirstName" Title="First Name" />
            <RadzenDataGridColumn TItem="Employee" Property="EmployeeID" Title="Employee ID" />
            <RadzenDataGridColumn TItem="Employee" Property="Title" Title="Title" />
            <RadzenDataGridColumn TItem="Employee" Property="BirthDate" Title="Birth Date">
            <Template Context="data">
            @String.Format("{0:d}", data.BirthDate)
            </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Employee" Property="HireDate" Title="Hire Date">
            <Template Context="data">
            @String.Format("{0:d}", data.HireDate)
            </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Employee" Property="Address" Title="Address" />
            <RadzenDataGridColumn TItem="Employee" Property="City" Title="City" />
            <RadzenDataGridColumn TItem="Employee" Property="Region" Title="Region" />
            <RadzenDataGridColumn TItem="Employee" Property="PostalCode" Title="Postal Code" />
            <RadzenDataGridColumn TItem="Employee" Property="Country" Title="Country" />
            <RadzenDataGridColumn TItem="Employee" Property="HomePhone" Title="Home Phone" />
            <RadzenDataGridColumn TItem="Employee" Property="Extension" Title="Extension" />
            <RadzenDataGridColumn TItem="Employee" Property="Notes" Title="Notes" />
            </Columns>
            </RadzenDataGrid>*@
            </RadzenTabsItem>
            <RadzenTabsItem Text="Other">
                @*                <RadzenDataGrid ColumnWidth="150px" AllowFiltering="true" AllowPaging="true" PageSize="8" AllowSorting="true" Data="@customers" TItem="Customer">
            <Columns>
            <RadzenDataGridColumn TItem="Customer" Property="CustomerID" Title="Customer ID" />
            <RadzenDataGridColumn TItem="Customer" Property="CompanyName" Title="Company Name" />
            <RadzenDataGridColumn TItem="Customer" Property="ContactName" Title="Contact Name" />
            <RadzenDataGridColumn TItem="Customer" Property="ContactTitle" Title="Contact Title" />
            <RadzenDataGridColumn TItem="Customer" Property="Address" Title="Address" />
            <RadzenDataGridColumn TItem="Customer" Property="City" Title="City" />
            <RadzenDataGridColumn TItem="Customer" Property="Region" Title="Region" />
            <RadzenDataGridColumn TItem="Customer" Property="PostalCode" Title="Postal Code" />
            <RadzenDataGridColumn TItem="Customer" Property="Country" Title="Country" />
            <RadzenDataGridColumn TItem="Customer" Property="Phone" Title="Phone" />
            <RadzenDataGridColumn TItem="Customer" Property="Fax" Title="Fax" />
            </Columns>
            </RadzenDataGrid>*@
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
}

@code {

    [Parameter]
    public string RecipientId { get; set; }

    private IEnumerable<CommentModel> comments;

    private void OnProfileClick()
    {
        NavigationManager.NavigateTo("profiles/3", true);
    }

    protected override async Task OnInitializedAsync()
    {
        comments = Mapper.Map<IEnumerable<CommentModel>>(await OnebrbApiClient.CommentsAllAsync(RecipientId));
    }
}
