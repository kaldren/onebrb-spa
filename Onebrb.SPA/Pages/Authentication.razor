@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using OnebrbApi
<RemoteAuthenticatorView Action="@Action" />

@inject IOnebrbApiClient OnebrbApiClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@code {
    private bool _authenticated;

    [Parameter] public string? Action { get; set; }

    protected override void OnInitialized()
    {
        Task<AuthenticationState> _currentAuthenticationStateTask;

        AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;

        _currentAuthenticationStateTask =
            AuthenticationStateProvider.GetAuthenticationStateAsync();

        OnAuthenticationStateChanged(_currentAuthenticationStateTask);
    }

    private void OnAuthenticationStateChanged(Task<AuthenticationState> authenticationStateTask)
    {
        _ = InvokeAsync(async () =>
        {
            var authState = await authenticationStateTask;

            var user = authState.User;

            _authenticated = user.Identity?.IsAuthenticated ?? false;

            Console.WriteLine("OnAuthenticationStateChanged - {0}", _authenticated);

            if (_authenticated)
            {
                await OnebrbApiClient.ActivateAsync();
            }

            StateHasChanged();
        });
    }
}
